@model OrionCoreCableColor.Models.CI_Configuracion.CI_ConfiguracionViewModel

<!--Modal header-->
<div class="modal-header bg-primary-600 bg-primary-gradient">

    @if (Model.EsEditar)
    {<h2 class="modal-title text-white">Editar CI Configuración</h2> }
    else
    {<h2 class="modal-title text-white">Crear CI Configuración</h2>}
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true"><i class="fal fa-times"></i></span>
    </button>
</div>

<!--Modal body-->
<div class="modal-body">
    <form id="MyFormModal">
        @Html.HiddenFor(model => model.fiIDConfiguracion)

        <div class="form-group">
            @Html.LabelFor(model => model.fcConfiguracion, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mar-btm">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fal fa-pencil  fa-fw"></i></span>
                </div>

                @Html.EditorFor(model => model.fcConfiguracion, new { htmlAttributes = new { @class = "form-control input-lg" } })
            </div>
            @Html.ValidationMessageFor(model => model.fcConfiguracion, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fiIDPais, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mar-btm" style="width:100%;">
                <select id="fiIDPais" class="form-select form-control">
                </select>
                @*Html.DropDownListFor(model => model.fiIDPais, new SelectList(ViewBag.ListaPaises, "Value", "Text"), null, new { @class = "form-control input-lg", @style = "width:100%;" })*@
            </div>
            @Html.ValidationMessageFor(model => model.fiIDPais, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fiIDRegion, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mar-btm" style="width:100%;">

                <select id="fiIDRegion" class="form-select form-control">
                </select>
                @*Html.DropDownListFor(model => model.fiIDRegion, new SelectList(ViewBag.ListaRegiones, "Value", "Text"), null, new { @class = "form-control input-lg", @style = "width:100%;" })*@
            </div>
            @Html.ValidationMessageFor(model => model.fiIDRegion, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fiIDCiudad, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mar-btm" style="width:100%;">

                <select id="fiIDCiudad" class="form-select form-control">
                </select>
                @*Html.DropDownListFor(model => model.fiIDRegion, new SelectList(ViewBag.ListaRegiones, "Value", "Text"), null, new { @class = "form-control input-lg", @style = "width:100%;" })*@
            </div>
            @Html.ValidationMessageFor(model => model.fiIDCiudad, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fiIDCI, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mar-btm" style="width:100%;">
                @Html.DropDownListFor(model => model.fiIDCI, new SelectList(ViewBag.ListaCI, "Value", "Text"), null, new { @class = "form-control input-lg", @style = "width:100%;" })
            </div>
            @Html.ValidationMessageFor(model => model.fiIDCI, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fcLatitud, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mar-btm">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fal fa-pencil  fa-fw"></i></span>
                </div>

                @Html.EditorFor(model => model.fcLatitud, new { htmlAttributes = new { @class = "form-control input-lg" } })
            </div>
            @Html.ValidationMessageFor(model => model.fcLatitud, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fcLongitud, htmlAttributes: new { @class = "control-label" })
            <div class="input-group mar-btm">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fal fa-pencil  fa-fw"></i></span>
                </div>

                @Html.EditorFor(model => model.fcLongitud, new { htmlAttributes = new { @class = "form-control input-lg" } })
            </div>
            @Html.ValidationMessageFor(model => model.fcLongitud, "", new { @class = "text-danger" })
        </div>

        <div class="modal-footer">
            <div class="clearfix" style="width:100%;">
                <button data-dismiss="modal" class="btn btn-link waves-effect waves-themed float-left btn-lg text-danger" type="button"><i class="text-lg ion-close-round"></i></button>
                <button class="btn btn-link btn-lg waves-effect waves-themed float-right text-success"><i class="text-lg ion-checkmark-round"></i></button>
            </div>

        </div>

    </form>
</div>


@Scripts.Render("~/bundles/jqueryval")

<script>
    var selecpais = @Html.Raw(Json.Encode(ViewBag.ListaPaises));

    @*var idpaisse = @Html.Raw(Json.Encode(model.fiIDCiudad));
    var idciudadse = @Html.Raw(Json.Encode(model.fiIDCiudad));
    var idregiose = @Html.Raw(Json.Encode(model.fiIDRegion));*@

    $("#fiIDPais").select2({ dropdownParent: $("#MyModalSm") });
    $("#fiIDRegion").select2({ dropdownParent: $("#MyModalSm") });
    $("#fiIDCI").select2({ dropdownParent: $("#MyModalSm") });

    llenarSelect();
    function llenarSelect() {

        var selectpais = $("#fiIDPais");

        selectpais.empty();
        selectpais.append($('<option>', {
            value: 0,
            text: 'Seleccione Un Pais'
        }));
        $("#fiIDPais").select2({ dropdownParent: $("#MyModalSm") }).val(0).trigger("change");
        $.each(selecpais, function (index, item) {
            selectpais.append($('<option>', {
                value: item.Value,
                text: item.Text
            }));
        });

    }

    $(`#fiIDPais`).on('change', function () {
        //console.log(listaselecregion);
        var idpaiselect = $(this).val();

        $.ajax({
            url: "@Url.Action("SelectLlenarRegionPorPais", "LlenarCampos")",
            type: "GET",
            data: { idpais: idpaiselect },
            success: function (respuesta) {

                var selectregion = $("#fiIDRegion");

                selectregion.empty();
                selectregion.append($('<option>', {
                    value: 0,
                    text: 'Seleccione Una Region'
                }));


                $("#fiIDRegion").select2({ dropdownParent: $("#MyModalSm") }).val(0).trigger("change");
                $.each(respuesta, function (index, item) {
                    selectregion.append($('<option>', {
                        value: item.Value,
                        text: item.Text
                    }));
                });
            },
            error: function (respuesta) {
                console.log(respuesta);
            }
        });


    })

    $(`#fiIDRegion`).on('change', function () {
        var idregionselect = $(this).val();

        $.ajax({
            url: "@Url.Action("SelectLlenarCiudadPorRegioin", "LlenarCampos")",
            type: "GET",
            data: { IdRegion: idregionselect},
            success: function (respuesta) {

                var selectciudad = $("#fiIDCiudad");

                selectciudad.empty();
                selectciudad.append($('<option>', {
                    value: 0,
                    text: 'Seleccione Un Ciudad'
                }));


                $("#fiIDCiudad").select2({ dropdownParent: $("#MyModalSm") }).val(0).trigger("change");
                $.each(respuesta, function (index, item) {
                    selectciudad.append($('<option>', {
                        value: item.Value,
                        text: item.Text
                    }));
                });
            },
            error: function (respuesta) {
                console.log(respuesta);
            }

        });
    })

    $("#MyFormModal").submit(function (event) {
        event.preventDefault();
        if (!$("#MyFormModal").valid()) {
            return false;
        }
        console.log("Valor de fiIDCategoriaResolucion:", $("#fiIDCategoriaResolucion").val());

        var model = @Html.Raw(Json.Encode(Model));
        model.fiIDPais = $("#fiIDPais").val();
        model.fiIDRegion = $("#fiIDRegion").val();
        model.fiIDCiudad = $(`#fiIDCiudad`).val();
        model.fiIDCI = $("#fiIDCI").val();
        model.fiIDConfiguracion = $("#fiIDConfiguracion").val();
        model.fcLongitud = $("#fcLongitud").val();
        model.fcLatitud = $("#fcLatitud").val();
        model.fcConfiguracion = $("#fcConfiguracion").val();

        var url = "@Url.Action("Crear", "CI_Configuracion")";
        if (str2bool('@Model.EsEditar')) {
            url = "@Url.Action("Editar", "CI_Configuracion")";
        }

        $.ajax({
            url: url,
            type: 'POST',
            data: JSON.stringify({ model: model }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data.Estado) {
                    CerrarModal();
                    $.fn.dataTable.Api("#TablaPrincipal").ajax.reload().draw(false);
                }
                AlertaAjax(data);
            },
            error: function (data) {
                AlertaError();
            },
        });


    });
</script>