
@{
    ViewBag.Title = "BandejaTicketCerradosCancelados";
}

<style>
    th, td {
        white-space: nowrap; /* Asegura que el texto no se desborde y mantenga el alineamiento */
        text-align: left; /* Asegura un alineamiento consistente */
        padding: 10px; /* Ajusta el espacio interno para uniformidad */
    }

    .text-overflow {
        white-space: nowrap; /* Trunca el texto en las celdas de contenido */
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .text-overflow:hover {
            white-space: normal;
            overflow: visible;
            background-color: #f0f0f0;
            z-index: 1;
            position:  relative;
        }
</style>

<div class="panel">
    <div class="panel-hdr">
        <div class="col-lg-12">
            <h2 class="panel-title"> <i class="fal fa-map fa-fw"></i>Incidentes Cerrados</h2>
        </div>

    </div>


    <div class="panel-container" style="padding-top:12px; padding-bottom:15px;">

        <div class="container-fluid table-container" id="cerrados">

            <div class="col-lg-12">
                <table class="table table-bordered table-hover table-striped w-100 dataTable dtr-inline" style="width:100%;" id="TablaPrincipalTicketCerrados">
                    <thead>
                        <tr>

                            <th>Acciones</th>
                            <th style="width:80px">Estado</th>
                            <th>Titulo</th>
                            <th>Descripcion</th>
                            <th style="width:80px">Solicitante</th>
                            <th style="width:80px">Area Solicitante</th>
                            <th style="width:80px">Usuario Asignado</th>
                            <th style="width:80px">Area Asignada</th>

                            <th style="width:80px">Categoría apertura</th>
                            <th style="width:80px">Subcategoria apertura</th>
                            <th style="width:80px">Urgencia</th>
                            <th style="width:80px">Impacto</th>
                            <th style="width:80px">Prioridad</th>
                            <th style="width:80px">SLA</th>
                            <th style="width:80px">Usuarios afectados</th>

                            <th style="width:80px">Clasificacion CI</th>
                            <th style="width:80px">CI</th>
                            <th style="width:80px">Servicios</th>
                            <th style="width:80px">Pais</th>
                            <th style="width:80px">Region</th>
                            <th style="width:80px">Ciudad</th>
                            <th style="width:80px">Longitud y Latitud</th>
                            <th style="width:80px">SLA Cumplido</th>

                            <th style="width:150px">Fecha alarma/detección</th>
                            <th style="width:150px">Fecha Creacion Solicitud</th>
                            <th style="width:150px">Fecha última actualización</th>
                            <th style="width:150px">Usuario última actualización</th>
                            <th style="width:150px">Tiempo Transcurrido</th>
                            <th style="width:150px">Grupo Resolutor</th>
                            <th style="width:150px">Usuario Resolutor</th>
                            <th style="width:150px">Fecha de Resolucion</th>
                            <th style="width:150px">Pausa</th>
                            <th style="width:150px">Categoria de Causa de Falla</th>
                            <th style="width:150px">SubCategoria de Causa de Falla</th>
                            <th style="width:150px">Descripcion de Falla</th>

                            <th style="width:150px">Tipo de Solución</th>
                            <th style="width:150px">Descripción de la solución</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>

    </div>

</div>

<div class="panel">
    <div class="panel-hdr">

        <div class="col-lg-12 title-container">
            <h2 class="panel-title"> <i class="fal fa-map fa-fw"></i>Incidentes Cancelados</h2>
        </div>
    </div>


    <div class="panel-container" style="padding-top:12px; padding-bottom:15px;">



        <div class="col-lg-12">
            <table class="table table-bordered table-hover table-striped w-100 dataTable dtr-inline" style="width:100%;" id="TablaPrincipalTicketCancelados">
                <thead>
                    <tr>
                        <th>Acciones</th>
                        <th style="width:80px">Estado</th>
                        <th class="text-overflow">Titulo</th>
                        <th class="text-overflow">Descripcion</th>
                        <th style="width:80px">Solicitante</th>
                        <th style="width:80px">Area Solicitante</th>
                        <th style="width:80px">Usuario Asignado</th>
                        <th style="width:80px">Area Asignada</th>

                        <th style="width:80px">Categoría apertura</th>
                        <th style="width:80px">Subcategoria apertura</th>
                        <th style="width:80px">Urgencia</th>
                        <th style="width:80px">Impacto</th>
                        <th style="width:80px">Prioridad</th>
                        <th style="width:80px">SLA</th>
                        <th style="width:80px">Usuarios afectados</th>

                        <th style="width:80px">Clasificacion CI</th>
                        <th style="width:80px">CI</th>
                        <th style="width:80px">Servicios</th>
                        <th style="width:80px">Pais</th>
                        <th style="width:80px">Region</th>
                        <th style="width:80px">Ciudad</th>
                        <th style="width:80px">Longitud y Latitud</th>
                        <th style="width:80px">SLA Cumplido</th>

                        <th style="width:150px">Fecha alarma/detección</th>
                        <th style="width:150px">Fecha Creacion Solicitud</th>
                        <th style="width:150px">Fecha última actualización</th>
                        <th style="width:150px">Usuario última actualización</th>
                        <th style="width:150px">Tiempo Transcurrido</th>
                        <th style="width:80px">Motivo Cancelación</th>

                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/Content/js/datagrid/datatables/datatables.export.js"></script>
    <script>

        var idmasalto = 0; //--ViewBag.IdMasReciente;

        var tablaPrincipalcerrados = $('#TablaPrincipalTicketCerrados').DataTable({

            autoWidth: false,
            //responsive: true,
            language: {
                "emptyTable": "No se encontraron resultados.",
                //"search": '<div class="icon-addon addon-md"><label for="search" class="ion-search"></label>',
                "paginate": {
                    first: "Primero",
                    previous: "Anterior",
                    next: "Siguiente",
                    last: "Ultimo"
                },
                "lengthMenu": " _MENU_ ",
                "info": "Mostrando registros del _START_ al _END_ de _TOTAL_ registros totales.",
                "infoEmpty": "No hay registros para mostrar.",
            },
            dom: 'Bfrtip',
            order: [[2, "desc"]],
            ajax: {
                url: '@Url.Action("ListarTicketCerrados", "Ticket")',
                method: "Get",
                dataSrc: function (data) {

                    const ids = data.map(item => item.fiIDRequerimiento);

                    // Encontrar el Id más grande usando Math.max
                    const maxId = Math.max(...ids);
                    idmasalto = maxId;

                    return data;
                    //console.log(data);
                }
            },
            scrollX: true,    // Habilitar el scroll horizontal
            columns: [


                {//0
                    data: null,
                    className: "text-center",
                    render: function (data) {
                        //console.log(data);
                        var opt = ``;
                        //console.log(data)

                        opt += `
                                    <div class='dropdown d-inline-block dropleft'>
                                        <a href='#'' class='btn btn-sm btn-icon btn-outline-primary rounded-circle shadow-0' data-toggle='dropdown' aria-expanded='true' title='Mas Opciones'><i class=\"fal fa-ellipsis-v\"></i></a>
                                        <div class='dropdown-menu'>
                                            <a class='dropdown-item' href='javascript:void(0);' onclick="VerDetalleTicket(${data.fiIDRequerimiento})">Ver Detalle Incidente</a>
                                    `;

                        opt += `</div>
                                </div>`;
                        return opt;
                    }
                },
                {
                    data: null,
                    className: "text-center",
                    render: function (data, type, row) {
                        return `<a href="javascript:void(0)" onclick="ProcesosEstados(${data.fiIDRequerimiento})"> <span class="btn-sm btn-block btn-${data.fcClaseColor} text-center" > ${data.fcDescripcionEstado}</span> </a>`;

                    }
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {

                        const maxLength = idmasalto.toString().length;
                        const paddedIds = padWithZeros(data.fiIDRequerimiento, maxLength)

                        return `${paddedIds} <spam class="text-muted"> | <b href="javascript:void(0)" onclick="abrirModalDetalle(${data.fiIDRequerimiento})"> ${data.fcTituloRequerimiento}</b></spam>`

                    }
                },
                {
                    data: "fcDescripcionRequerimiento",
                    className: "td-responsive",

                },
                {
                    data: "fcNombreSolicitante",
                    className: "td-responsive",

                },
                {
                    data: "fcNombreAreaSolicitante",
                    className: "td-responsive",

                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        if (data.fiIDUsuarioAsignado == 3013) {
                            return `<span class="btn-sm btn-block badge badge-secondary">Pendiente</span> `;
                        } else {
                            return data.fcNombreAsignado;
                        }
                    }
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        //if (data.fiAreaAsignada == 6) {
                        //    return `<span class="btn-sm btn-block badge badge-secondary">Pendiente</span> `;
                        //} else {
                        return data.fcNombreAreaAsignada;
                        //}
                    }
                },
                {
                    data: "fcDescripcionCategoria",
                    className: "td-responsive",
                },
                {
                    data: "fcTipoRequerimiento",
                    className: "td-responsive",
                },
                {
                    data: "fcDescripcionUrgencia",
                    className: "td-responsive",
                },
                {
                    data: "fcDescripcionImpacto",
                    className: "td-responsive",
                },
                {
                    data: "fcDescripcionPrioridad",
                    className: "td-responsive",
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data, type, row) {
                        //var segundos = Math.floor(data.fiTiempo / 1000);
                        var minutos = data.fiTiempo//Math.floor(data.fiTiempo / 60);
                        var horas = Math.floor(minutos / 60);
                        var dias = Math.floor(horas / 24);
                        var tiempototal = '';
                        if (dias > 0) {
                            tiempototal += `${dias} <b>Dias.</b>, `;
                        }
                        //console.log((horas % 24))
                        if ((horas % 24) > 0) {
                            tiempototal += `${horas % 24} <b>Horas.</b>, `;
                        }
                        if ((minutos % 60) > 0) {
                            tiempototal += `${minutos % 60} <b>Minutos.</b>, `;
                        }
                        var nuevoValor = `${tiempototal}`; // Por ejemplo, aumentar el valor actual en 1

                        return nuevoValor;
                    }
                },
                {
                    data: "fiAfectacion",
                    className: "td-responsive",
                },
                {
                    data: "fcClacificacionCI",
                    className: "td-responsive",
                },
                {
                    data: "fcConfiguracion",
                    className: "td-responsive",
                },
                {
                    data: "fcNombreServicio",
                    className: "td-responsive",
                },
                {
                    data: "fcPais",
                    className: "td-responsive",
                },
                {
                    data: "fcRegion",
                    className: "td-responsive",
                },
                {
                    data: "fcCiudad",
                    className: "td-responsive",
                },
                {
                    data: "fcLongitudLatitud",
                    className: "td-responsive",
                },
                {
                    data: "fiSLA",
                    className: "td-responsive",
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        return moment(data.fdFechaAlarmaDeteccion).locale('es').format('YYYY/MM/DD hh:mm a')
                    }
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        return moment(data.fdFechaCreacion).locale('es').format('YYYY/MM/DD hh:mm a')
                    }
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        return moment(data.fdFechaUltimaModificacion).locale('es').format('YYYY/MM/DD hh:mm a')
                    }
                },
                {
                    data: "fcUsuarioModificador",
                    className: "td-responsive",
                },

                {
                    data: null,
                    className: "td-responsive",
                    render: function (data, type, row) {

                        var ahora = new Date(moment(data.fdFechadeCierre).locale('es').format('YYYY/MM/DD hh:mm a'));
                        var fechaInicio = new Date(moment(data.fdFechaCreacion).locale('es').format('YYYY/MM/DD hh:mm a'));
                        var diferencia = ahora.getTime() - fechaInicio.getTime();

                        // Calcula los segundos, minutos, horas y días transcurridos
                        var segundos = Math.floor(diferencia / 1000);
                        var minutos = Math.floor(segundos / 60);
                        var horas = Math.floor(minutos / 60);
                        var dias = Math.floor(horas / 24);

                        var tiempototal = '';
                        if (dias > 0) {
                            tiempototal += `${dias} <b>Di.</b>, `;
                        }
                        //console.log((horas % 24))
                        if ((horas % 24) > 0) {
                            tiempototal += `${horas % 24} <b>Ho.</b>, `;
                        }
                        if ((minutos % 60) > 0) {
                            tiempototal += `${minutos % 60} <b>Mi.</b>, `;
                        }
                        // Realizar cualquier operación o cálculo necesario para actualizar el valor
                        var nuevoValor = `${tiempototal} ${segundos % 60} <b>Seg.</b>`; // Por ejemplo, aumentar el valor actual en 1

                        return nuevoValor;
                        //return "Han transcurrido " + dias + " días, " + horas % 24 + " horas, " + minutos % 60 + " minutos, " + segundos % 60 + " segundos.";
                    }
                },

                {
                    data: "fcAreaResoluctor",
                    className: "td-responsive",
                    visible: true,

                },
                {
                    data: "fcNombreResuluctor",
                    className: "td-responsive",
                    visible: true,

                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        return moment(data.fdFechaResuluctor).locale('es').format('YYYY/MM/DD hh:mm a')
                    }
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        if (data.fiIDPausa > 0) {
                            return "Fue Pausado"
                        } else
                        {
                            return "No Fue Pausado"
                        }

                    }
                },

                {
                    data: "fcCategoriaResolucion",
                    className: "td-responsive",
                    visible: true,

                },
                {
                    data: "fcSubCategoriaResolucion",
                    className: "td-responsive",
                    visible: true,

                },
                {
                    data: "fcDescripcionRequerimiento",
                    className: "td-responsive",

                },
                {
                    data: "fcNombreMotivo",
                    className: "td-responsive",
                    visible: true,

                },
                {
                    data: "fcComentarioResoluctor",
                    className: "td-responsive",
                    visible: true,

                },

            ],
            "columnDefs": [
                { "width": "200px", "targets": 0 }, // Ancho específico para la primera columna (evitada)
                { "width": "300px", "targets": "_all" } // Ancho fijo para el resto de las columnas
            ],
            buttons: [
                {
                    extend: 'excelHtml5',
                    text: 'EXCEL',
                    messageTop: "Incidentes Cerrados",
                    filename: "Incidentes Cerrados",
                    className: 'btn-outline-success btn-sm mr-1',
                    exportOptions: {
                        columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,36]
                        // columns: ':visible'
                    }
                },
                {
                    extend: 'csvHtml5',
                    text: 'CSV',
                    titleAttr: 'Generate CSV',
                    className: 'btn-outline-primary btn-sm mr-1'
                },
                {
                    extend: 'copyHtml5',
                    text: 'Copy',
                    titleAttr: 'Copy to clipboard',
                    className: 'btn-outline-primary btn-sm mr-1'
                },
                {
                    extend: 'print',
                    text: 'Print',
                    titleAttr: 'Print Table',
                    className: 'btn-outline-primary btn-sm'
                }
            ],
            "createdRow": function (row, data, dataIndex) {
                $('td', row).each(function (index) {
                    if (index > 0) { // Evitar la primera columna
                        var originalText = $(this).text();
                        if (originalText.length > 100) {
                            var truncatedText = originalText.substring(0, 100) + '...';
                            $(this).attr('data-full-text', originalText);
                            $(this).text(truncatedText).addClass('text-overflow');
                        }
                    }
                });
            }

        }).columns.adjust();

        var tablaPrincipalcancelados = $('#TablaPrincipalTicketCancelados').DataTable({

            autoWidth: false,
            //responsive: true,
            language: {
                "emptyTable": "No se encontraron resultados.",
                //"search": '<div class="icon-addon addon-md"><label for="search" class="ion-search"></label>',
                "paginate": {
                    first: "Primero",
                    previous: "Anterior",
                    next: "Siguiente",
                    last: "Ultimo"
                },
                "lengthMenu": " MENU ",
                "info": "Mostrando registros del _START_ al _END_ de _TOTAL_ registros totales.",
                "infoEmpty": "No hay registros para mostrar.",
            },
            dom: 'Bfrtip',
            order: [[2, "desc"]],
            ajax: {
                url: '@Url.Action("ListarTicketCancelados", "Ticket")',
                method: "Get",
                dataSrc: function (data) {

                    const ids = data.map(item => item.fiIDRequerimiento);

                    // Encontrar el Id más grande usando Math.max
                    const maxId = Math.max(...ids);
                    idmasalto = maxId;

                    return data;
                    //console.log(data);
                }
            },
            //scrollY: '300px', // Altura del scroll vertical
            scrollX: true,    // Habilitar el scroll horizontal
            //scrollCollapse: true, // Permitir el colapso del scroll si no hay suficientes datos
            columns: [

                {//0
                    data: null,
                    className: "text-center",
                    render: function (data) {
                        var opt = ``;


                        opt += `
                        <div class='dropdown d-inline-block dropleft'>
                            <a href='#'' class='btn btn-sm btn-icon btn-outline-primary rounded-circle shadow-0' data-toggle='dropdown' aria-expanded='true' title='Mas Opciones'><i class=\"fal fa-ellipsis-v\"></i></a>
                            <div class='dropdown-menu'>
                                <a class='dropdown-item' href='javascript:void(0);' onclick="VerDetalleTicket(${data.fiIDRequerimiento})">Ver Detalle Incidente</a>
                        `;


                        //"<a href='javascript:void(0);' class='btn btn-sm btn-icon btn-outline-danger rounded-circle mr-1' title='Delete Record'><i class=\"fal fa-times\"></i></a><div class='dropdown d-inline-block dropleft'><a href='#'' class='btn btn-sm btn-icon btn-outline-primary rounded-circle shadow-0' data-toggle='dropdown' aria-expanded='true' title='More options'><i class=\"fal fa-ellipsis-v\"></i></a><div class='dropdown-menu'><a class='dropdown-item' href='javascript:void(0);'>Change Status</a><a class='dropdown-item' href='javascript:void(0);'>Generate Report</a></div></div>"

                        opt += `</div>
                    </div>`;
                        return opt;
                    }
                },
                {
                    data: null,
                    className: "text-center",
                    render: function (data, type, row) {
                        return `<a href="javascript:void(0)" onclick="ProcesosEstados(${data.fiIDRequerimiento})"> <span class="btn-sm btn-block btn-${data.fcClaseColor} text-center" > ${data.fcDescripcionEstado}</span> </a>`;

                    }
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {

                        const maxLength = idmasalto.toString().length;
                        const paddedIds = padWithZeros(data.fiIDRequerimiento, maxLength)
                        return `${paddedIds} <spam class="text-muted"> | <b href="javascript:void(0)" onclick="abrirModalDetalle(${data.fiIDRequerimiento})"> ${data.fcTituloRequerimiento}</b></spam>`

                    }
                },
                {
                    data: "fcDescripcionRequerimiento",
                    className: "td-responsive",

                },
                {
                    data: "fcNombreSolicitante",
                    className: "td-responsive",

                },
                {
                    data: "fcNombreAreaSolicitante",
                    className: "td-responsive",

                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        if (data.fiIDUsuarioAsignado == 3013) {
                            return `<span class="btn-sm btn-block badge badge-secondary">Pendiente</span> `;
                        } else {
                            return data.fcNombreAsignado;
                        }
                    }
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        //if (data.fiAreaAsignada == 6) {
                        //    return `<span class="btn-sm btn-block badge badge-secondary">Pendiente</span> `;
                        //} else {
                        return data.fcNombreAreaAsignada;
                        //}
                    }
                },
                {
                    data: "fcDescripcionCategoria",
                    className: "td-responsive",
                },
                {
                    data: "fcTipoRequerimiento",
                    className: "td-responsive",
                },
                {
                    data: "fcDescripcionUrgencia",
                    className: "td-responsive",
                },
                {
                    data: "fcDescripcionImpacto",
                    className: "td-responsive",
                },
                {
                    data: "fcDescripcionPrioridad",
                    className: "td-responsive",
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data, type, row) {
                        //var segundos = Math.floor(data.fiTiempo / 1000);
                        var minutos = data.fiTiempo//Math.floor(data.fiTiempo / 60);
                        var horas = Math.floor(minutos / 60);
                        var dias = Math.floor(horas / 24);
                        var tiempototal = '';
                        if (dias > 0) {
                            tiempototal += `${dias} <b>Dias.</b>, `;
                        }
                        //console.log((horas % 24))
                        if ((horas % 24) > 0) {
                            tiempototal += `${horas % 24} <b>Horas.</b>, `;
                        }
                        if ((minutos % 60) > 0) {
                            tiempototal += `${minutos % 60} <b>Minutos.</b>, `;
                        }
                        var nuevoValor = `${tiempototal}`; // Por ejemplo, aumentar el valor actual en 1

                        return nuevoValor;
                    }
                },
                {
                    data: "fiAfectacion",
                    className: "td-responsive",
                },
                {
                    data: "fcClacificacionCI",
                    className: "td-responsive",
                },
                {
                    data: "fcConfiguracion",
                    className: "td-responsive",
                },
                {
                    data: "fcNombreServicio",
                    className: "td-responsive",
                },
                {
                    data: "fcPais",
                    className: "td-responsive",
                },
                {
                    data: "fcRegion",
                    className: "td-responsive",
                },
                {
                    data: "fcCiudad",
                    className: "td-responsive",
                },
                {
                    data: "fcLongitudLatitud",
                    className: "td-responsive",
                },
                {
                    data: "fiSLA",
                    className: "td-responsive",
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        return moment(data.fdFechaAlarmaDeteccion).locale('es').format('YYYY/MM/DD hh:mm a')
                    }
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        return moment(data.fdFechaCreacion).locale('es').format('YYYY/MM/DD hh:mm a')
                    }
                },
                {
                    data: null,
                    className: "td-responsive",
                    render: function (data) {
                        return moment(data.fdFechaUltimaModificacion).locale('es').format('YYYY/MM/DD hh:mm a')
                    }
                },
                {
                    data: "fcUsuarioModificador",
                    className: "td-responsive",
                },

                {
                    data: null,
                    className: "td-responsive",
                    render: function (data, type, row) {

                        var ahora = new Date();
                        var fechaInicio = new Date(moment(data.fdFechaCreacion).locale('es').format('YYYY/MM/DD hh:mm a'));
                        var diferencia = ahora.getTime() - fechaInicio.getTime();

                        // Calcula los segundos, minutos, horas y días transcurridos
                        var segundos = Math.floor(diferencia / 1000);
                        var minutos = Math.floor(segundos / 60);
                        var horas = Math.floor(minutos / 60);
                        var dias = Math.floor(horas / 24);

                        var tiempototal = '';
                        if (dias > 0) {
                            tiempototal += `${dias} <b>Di.</b>, `;
                        }
                        //console.log((horas % 24))
                        if ((horas % 24) > 0) {
                            tiempototal += `${horas % 24} <b>Ho.</b>, `;
                        }
                        if ((minutos % 60) > 0) {
                            tiempototal += `${minutos % 60} <b>Mi.</b>, `;
                        }
                        // Realizar cualquier operación o cálculo necesario para actualizar el valor
                        var nuevoValor = `${tiempototal} ${segundos % 60} <b>Seg.</b>`; // Por ejemplo, aumentar el valor actual en 1

                        return nuevoValor;
                        //return "Han transcurrido " + dias + " días, " + horas % 24 + " horas, " + minutos % 60 + " minutos, " + segundos % 60 + " segundos.";
                    }
                },

                {
                    data: "fcNombreMotivo",
                    className: "td-responsive",

                },





            ],
            "columnDefs": [
                { "width": "200px", "targets": 0 }, // Ancho específico para la primera columna (evitada)
                { "width": "300px", "targets": "_all" } // Ancho fijo para el resto de las columnas
            ],
            buttons: [
                {
                    extend: 'excelHtml5',
                    text: 'EXCEL',
                    messageTop: "Incidentes Cancelados",
                    filename: "Incidentes Cancelados",
                    className: 'btn-outline-success btn-sm mr-1',
                    exportOptions: {
                        columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]
                        // columns: ':visible'
                    }
                },
                {
                    extend: 'csvHtml5',
                    text: 'CSV',
                    titleAttr: 'Generate CSV',
                    className: 'btn-outline-primary btn-sm mr-1'
                },
                {
                    extend: 'copyHtml5',
                    text: 'Copy',
                    titleAttr: 'Copy to clipboard',
                    className: 'btn-outline-primary btn-sm mr-1'
                },
                {
                    extend: 'print',
                    text: 'Print',
                    titleAttr: 'Print Table',
                    className: 'btn-outline-primary btn-sm'
                }
            ],
            "createdRow": function (row, data, dataIndex) {
                $('td', row).each(function (index) {
                    if (index > 0) { // Evitar la primera columna
                        var originalText = $(this).text();
                        if (originalText.length > 100) {
                            var truncatedText = originalText.substring(0, 100) + '...';
                            $(this).attr('data-full-text', originalText);
                            $(this).text(truncatedText).addClass('text-overflow');
                        }
                    }
                });
            }


        }).columns.adjust();

    function ProcesosEstados(Ticket) {
            debugger;
            $.ajax({
                url: "@Url.Action("ModalBitacoraMejora", "Ticket")",
                method: "get",
                data: { id: Ticket },
                success: function (resp) {
                    ShowLeftModal(resp,"Recorrido Ticket");
                },
                error: function (resp) {
                    AlertaError();
                }
            });
        }

    function VerDetalleTicket(idticket) {

            $.ajax({
                url: "@Url.Action("DetalleTicket", "Ticket")",
                type: 'Get',
                data: { idticket: idticket},
                success: function (data) {
                    ShowModalBigScroll(data)
                }, error: function (data) {

                    var dataerror = { Titulo: "Error", Mensaje: "Error Al querer Ver el Detalle del Incidente", Estado: false }
                    AlertaAjax(dataerror)
                }
            });
        }

        $(document).on('mouseenter', 'td.text-overflow', function () {
            var fullText = $(this).attr('data-full-text'); // Obtiene el texto completo
            $(this).text(fullText);  // Muestra el texto completo
        });

        $(document).on('mouseleave', 'td.text-overflow', function () {
            var fullText = $(this).attr('data-full-text');
            var truncatedText = fullText.substring(0, 100) + '...'; // Vuelve a truncar
            $(this).text(truncatedText);  // Muestra el texto truncado de nuevo
        });

    </script>



}
